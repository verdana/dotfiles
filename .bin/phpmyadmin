#!/usr/bin/php
<?php
set_time_limit(0);

// 本地版本
$localVersion = '';

// 设定 phpMyAdmin 的安装目录
$pmaInstallDir = '/home/verdana/public/pma.phpvim.me';

// 检测本地已安装的 phpMyAdmin 版本
$file = $pmaInstallDir . '/libraries/Config.class.php';
if (file_exists($file)) {
    $content      = file_get_contents($file);

    preg_match("/\(\'PMA_VERSION\', *\'([^)]*)\'\)/", $content, $matches);
    if (isset($matches[1]) and strlen($matches[1])) {
        $localVersion = trim($matches[1]);
    }
}

// 檢查最新版本的 phpMyAdmin
$file     = 'http://www.phpmyadmin.net/home_page/version.json';
$context  = [ 'http' => [ 'request_fulluri' => true, 'timeout' => 30 ] ];
$response = @file_get_contents($file, false, stream_context_create($context));
if (false === $response) {
    exit('Connection lost, please retry...');
}
$data     = json_decode($response);

// 如果返回的 Json 數據有效
if (is_object($data) and strlen($data->version) and strlen($data->date)) {
    if (version_compare($localVersion, $data->version) != 0) {
        echo "Update to version: " . cli_color($data->version, 'green') . "\n";

        // 下載新版本
        $url = "http://downloads.sourceforge.net/project/phpmyadmin/phpMyAdmin/%s/phpMyAdmin-%s-all-languages.zip";
        $url = sprintf($url, $data->version, $data->version);
        $filename = basename($url);

        // 使用 CURL 下載
        echo '    Downloading: '. cli_color('connecting...', 'brown');
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_FILE, fopen($filename, 'w'));

        // 下载进度
        curl_setopt($ch, CURLOPT_NOPROGRESS, false);
        curl_setopt($ch, CURLOPT_PROGRESSFUNCTION, function($res, $total, $download) {
            if ($download <= 0) return;

            // 删除状态文字 "connecting..."
            static $removeConnection = 0;
            if (!$removeConnection) {
                backspace(13);
                $removeConnection = 1;
            }

            // 显示进度百分比
            static $len = 0;
            backspace($len);

            $percent = sprintf("%s/%s - %s%%", $download, $total, round($download * 100 / $total));
            $len = strlen($percent);
            print cli_color($percent, 'brown');

            // sleep
            usleep(400000);
        });

        curl_exec($ch);
        curl_close($ch);

        //$zipfile = $data->version . ".zip";
        //file_put_contents($zipfile, $response);
        //echo "done.\n";

        // 開始解壓縮
        $dir = "";
        echo "\n    Extracting " . cli_color($filename, 'brown') . '...';
        $zip = new ZipArchive;
        if (true === $zip->open($filename)) {
            $dir = dirname($zip->getNameIndex(1));
            $zip->extractTo('.');
            $zip->close();
            echo "done.\n";
        } else {
            exit("failed.\n");
        }

        // 解压成功后，当前目录应该存在目录
        if (empty($dir) or !is_dir($dir)) {
            exit("Can not find the phpMyAdmin directory extracting from package.\n");
        }

        // 安装新的文件
        $iter = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir));
        $iter->rewind();
        while ($iter->valid()) {
            if (!$iter->isDot()) {
                // 检查目标目录是否存在，否则创建
                $filepath = $pmaInstallDir . '/' . $iter->getSubPath();
                if (!is_dir($filepath)) {
                    @mkdir($filepath, 0755, true);
                }

                // 移动文件过去
                $oldfile = $dir . "/" . $iter->getSubPathName();
                $newfile = $pmaInstallDir . '/' . $iter->getSubPathName();
                @rename($oldfile, $newfile);
            }
            $iter->next();
        }

        // 清理删除
        // @rmdir($dir);
        `rm -rf $dir`;
        @unlink($filename);
        print "    Install complete.\n";
    }
    else {
        print cli_color(sprintf('You have the latest version (%s).', $data->version), 'green');
    }
}

// public backspace($multiplier) {{{
/**
 * 按下回退键删除字符
 *
 * @param mixed $multiplier
 * @access public
 * @return void
 */
function backspace($multiplier)
{
    if ($multiplier <= 0) return;
    print str_repeat("\x08", $multiplier);
}
// }}}

// public cli_color(msg,color) {{{
/**
 * 为文本着色
 *
 * @param mixed $msg
 * @param mixed $color
 * @access public
 * @return void
 */
function cli_color($msg, $color)
{
    $colors = [
        'black'        => '0;30', 'dark_gray'    => '1;30',
        'blue'         => '0;34', 'light_blue'   => '1;34',
        'green'        => '0;32', 'light_green'  => '1;32',
        'cyan'         => '0;36', 'light_cyan'   => '1;36',
        'red'          => '0;31', 'light_red'    => '1;31',
        'purple'       => '0;35', 'light_purple' => '1;35',
        'brown'        => '0;33', 'yellow'       => '1;33',
        'light_gray'   => '0;37', 'white'        => '1;37',
    ];

    $color = strtolower($color);
    if (isset($colors[$color])) {
        $msg = "\033[" . $colors[$color] . "m" . $msg . "\033[0m";
    }
    return $msg;
}
// }}}

/*- vim: set fdm=marker ff=unix sw=4 ts=4 et: -*/

